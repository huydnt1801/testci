// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// OtpsColumns holds the columns for the "otps" table.
	OtpsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "phone_number", Type: field.TypeString, Unique: true},
		{Name: "otp", Type: field.TypeString},
		{Name: "created_at", Type: field.TypeTime},
	}
	// OtpsTable holds the schema information for the "otps" table.
	OtpsTable = &schema.Table{
		Name:       "otps",
		Columns:    OtpsColumns,
		PrimaryKey: []*schema.Column{OtpsColumns[0]},
	}
	// SessionsColumns holds the columns for the "sessions" table.
	SessionsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "session_id", Type: field.TypeString},
		{Name: "expire_in", Type: field.TypeTime},
		{Name: "revoked", Type: field.TypeBool, Default: false},
		{Name: "user_id", Type: field.TypeInt, Nullable: true},
		{Name: "driver_id", Type: field.TypeInt, Nullable: true},
	}
	// SessionsTable holds the schema information for the "sessions" table.
	SessionsTable = &schema.Table{
		Name:       "sessions",
		Columns:    SessionsColumns,
		PrimaryKey: []*schema.Column{SessionsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "sessions_users_sessions",
				Columns:    []*schema.Column{SessionsColumns[6]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.SetNull,
			},
			{
				Symbol:     "sessions_vehicle_drivers_sessions",
				Columns:    []*schema.Column{SessionsColumns[7]},
				RefColumns: []*schema.Column{VehicleDriversColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
		Indexes: []*schema.Index{
			{
				Name:    "session_session_id",
				Unique:  false,
				Columns: []*schema.Column{SessionsColumns[3]},
			},
		},
	}
	// TripsColumns holds the columns for the "trips" table.
	TripsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "start_x", Type: field.TypeFloat64},
		{Name: "start_y", Type: field.TypeFloat64},
		{Name: "start_location", Type: field.TypeString},
		{Name: "end_x", Type: field.TypeFloat64},
		{Name: "end_y", Type: field.TypeFloat64},
		{Name: "end_location", Type: field.TypeString},
		{Name: "distance", Type: field.TypeFloat64},
		{Name: "price", Type: field.TypeFloat64},
		{Name: "type", Type: field.TypeEnum, Enums: []string{"motor", "car"}},
		{Name: "status", Type: field.TypeEnum, Enums: []string{"waiting", "accept", "done", "cancel"}, Default: "waiting"},
		{Name: "rate", Type: field.TypeInt, Nullable: true},
		{Name: "user_id", Type: field.TypeInt},
		{Name: "driver_id", Type: field.TypeInt, Nullable: true},
	}
	// TripsTable holds the schema information for the "trips" table.
	TripsTable = &schema.Table{
		Name:       "trips",
		Columns:    TripsColumns,
		PrimaryKey: []*schema.Column{TripsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "trips_users_trips",
				Columns:    []*schema.Column{TripsColumns[14]},
				RefColumns: []*schema.Column{UsersColumns[0]},
				OnDelete:   schema.NoAction,
			},
			{
				Symbol:     "trips_vehicle_drivers_trips",
				Columns:    []*schema.Column{TripsColumns[15]},
				RefColumns: []*schema.Column{VehicleDriversColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// UsersColumns holds the columns for the "users" table.
	UsersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "phone_number", Type: field.TypeString, Unique: true, Size: 15},
		{Name: "confirmed", Type: field.TypeBool, Default: false},
		{Name: "full_name", Type: field.TypeString},
		{Name: "image_url", Type: field.TypeString, Nullable: true},
		{Name: "password", Type: field.TypeString},
	}
	// UsersTable holds the schema information for the "users" table.
	UsersTable = &schema.Table{
		Name:       "users",
		Columns:    UsersColumns,
		PrimaryKey: []*schema.Column{UsersColumns[0]},
	}
	// VehicleDriversColumns holds the columns for the "vehicle_drivers" table.
	VehicleDriversColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "created_at", Type: field.TypeTime},
		{Name: "updated_at", Type: field.TypeTime},
		{Name: "phone_number", Type: field.TypeString, Unique: true, Size: 15},
		{Name: "full_name", Type: field.TypeString},
		{Name: "password", Type: field.TypeString},
		{Name: "license", Type: field.TypeEnum, Enums: []string{"motor", "car"}},
	}
	// VehicleDriversTable holds the schema information for the "vehicle_drivers" table.
	VehicleDriversTable = &schema.Table{
		Name:       "vehicle_drivers",
		Columns:    VehicleDriversColumns,
		PrimaryKey: []*schema.Column{VehicleDriversColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		OtpsTable,
		SessionsTable,
		TripsTable,
		UsersTable,
		VehicleDriversTable,
	}
)

func init() {
	SessionsTable.ForeignKeys[0].RefTable = UsersTable
	SessionsTable.ForeignKeys[1].RefTable = VehicleDriversTable
	TripsTable.ForeignKeys[0].RefTable = UsersTable
	TripsTable.ForeignKeys[1].RefTable = VehicleDriversTable
}
